
# ------------------------------------------------------------------------
# 	Makefile for BLT library using VC++.
# ------------------------------------------------------------------------

include ../vc.config
srcdir = ../$(TOP)/src
libsrcdir =   $(srcdir)/../..
TOOLS32 =	C:\Program Files\Microsoft Visual Studio 8\Vc
BIN =		C:/Program\ Files/Microsoft\ Visual\ Studio\ 8/Vc/bin
AR =		lib.exe -link50compat
LD =		link.exe
CC =		cl.exe
rc32 =		rc.exe
MT =		mt.exe
SDK = C:/Program Files/Microsoft Platform SDK for Windows Server 2003 R2
mslibs = $(TOOLS32)\lib;$(SDK)\lib;.

ifeq ($(WITH_JPG),1)
JPG_DEFINES =	-DHAVE_LIBJPG
endif	# WITH_JPG

ifeq ($(WITH_PNG),1)
PNG_DEFINES =	-DHAVE_LIBPNG
endif	# WITH_PNG

ifeq ($(WITH_PNG),1)
PNGDEF        = -DHAVE_PNG_H -DHAVE_LIBPNG
PNGDIR        =	$(libsrcdir)/libpng-1.2.5
ZLIBDIR	      = $(libsrcdir)/zlib-1.2.1
PNGLIB        =	$(PNGDIR)/libpng.lib $(ZLIBDIR)/zlib.lib
PNGINC	      = -I$(PNGDIR) -I$(ZLIBDIR)
endif	# WITH_PNG

ifeq ($(WITH_TIF),1)
TIFDEF        = -DHAVE_TIFF_H -DHAVE_LIBTIFF
TIFDIR        =	$(libsrcdir)/tiff-v3.4beta037/libtiff
TIFLIB        =	$(TIFDIR)/libtiff.lib
TIFINC	      = -I$(TIFDIR)
endif	# WITH_TIF

ifeq ($(WITH_EXPAT),1)
EXPAT_DEFINES =		-DHAVE_EXPAT_H -DHAVE_LIBEXPAT
endif

ifeq ($(WITH_FT2),1)
FT2_DEFINES        = -DHAVE_FT2BUILD_H -DHAVE_LIBFT2 $(FT2_INC_SPEC)
endif

PICTURE_DEFINES = $(JPGDEF) $(PNGDEF) $(TIFDEF) 
PICTURE_INCLUDES = $(JPGINC) $(PNGINC) $(TIFINC)

TCL_STUBS_SPEC = 
TK_STUBS_SPEC  = 
STUB_DEFINES  =

ifeq ($(ENABLE_STUBS),1)
STUB_DEFINES  = -DUSE_TCL_STUBS -DUSE_TK_STUBS
endif	# ENABLE_STUBS

# ------------------------------------------------------------------------
# 	C Compiler options 
# ------------------------------------------------------------------------

DEFINES       =	-D_X86_=1 -D__STDC__ -DWIN32 -DCONSOLE -D_MT \
		$(DEBUG_DEFINES) $(STUB_DEFINES) $(SO_DEFINES) $(EXTRA_DEFINES)

LIB_DEFINES =	-DBLT_LIB_SUFFIX=\"$(DBG)\" -DBLT_SO_PREFIX=\"\" \
		-DBLT_SO_EXT=\".dll\"

ifeq ($(ENABLE_SHARED),1)
SO_DEFINES =	-D_DLL
SO_TARGET  =	build-dll
LIBS          =	$(COMMON_LIBS) 
else
SO_DEFINES =	-D_CTYPE_DISABLE_MACROS
LIBS          =	$(COMMON_LIBS) $(EXTRA_LIBS)
endif 	# ENABLE_SHARED

ifeq ($(ENABLE_SYMBOLS),1)
CFLAGS        =	-Z7 -Od
DEBUG_LDFLAGS =	-debug:full -debugtype:cv  
DEBUG_DEFINES = -DUSE_TCLALLOC=0
TK_LIB_SPEC   =	$(TKDIR)/lib/tk$(v2).lib  
TCL_LIB_SPEC  =	$(TCLDIR)/lib/tcl$(v2).lib 
MSVCRT        =	msvcrt.lib

TCL_STUBS_SPEC = $(TCLDIR)/lib/tclstub$(v2).lib  
TK_STUBS_SPEC =	$(TKDIR)/lib/tkstub$(v2).lib  

else

CFLAGS        =	-Ox -GB -GD 
DEBUG_LDFLAGS =	-debug:full -debugtype:cv  
TK_LIB_SPEC   =	$(TKDIR)/lib/tk$(v2).lib  
TCL_LIB_SPEC  =	$(TCLDIR)/lib/tcl$(v2).lib 
MSVCRT        =	msvcrt.lib

TCL_STUBS_SPEC =	$(TCLDIR)/lib/tclstub$(v2).lib  
TK_STUBS_SPEC =	$(TKDIR)/lib/tkstub$(v2).lib  

endif 	# ENABLE_SYMBOLS

ifeq ($(ENABLE_STUBS), 1)
  tcl_lib_spec=$(TCL_STUBS_SPEC)
  tk_lib_spec=$(TK_STUBS_SPEC)
else
  tcl_lib_spec=$(TCL_LIB_SPEC)
  tk_lib_spec=$(TK_LIB_SPEC)
endif

EXTRA_CFLAGS  =	-nologo -W3 

# ------------------------------------------------------------------------
# 	Linker flags and options 
# ------------------------------------------------------------------------
#-align:0x1000 
COMMON_LDFLAGS = -nodefaultlib -release -nologo -warn:3 \
		-machine:IX86 \
		$(DEBUG_LDFLAGS) 

#		-opt:ref -opt:icf,3 -opt:nowin98

DLLENTRY      =	@12
SO_LDFLAGS = $(COMMON_LDFLAGS) \
		-subsystem:console -entry:mainCRTStartup \
		-subsystem:windows -entry:WinMainCRTStartup \
		-entry:_DllMainCRTStartup$(DLLENTRY) -dll  


BLT_TCL_SO_LDFLAGS = $(COMMON_LDFLAGS) \
		-subsystem:console -entry:mainCRTStartup \
		-entry:_DllMainCRTStartup$(DLLENTRY) -dll  

BLT_TCL_SO_LDFLAGS = $(COMMON_LDFLAGS) -dll 

BLT_TK_SO_LDFLAGS = $(COMMON_LDFLAGS) \
		-subsystem:windows -entry:WinMainCRTStartup \
		-entry:_DllMainCRTStartup$(DLLENTRY) -dll  

BLT_TK_SO_LDFLAGS = $(COMMON_LDFLAGS) -dll 

LDFLAGS       =	$(COMMON_LDFLAGS) \
		-fixed:NO -stack:2300000 

COMMON_LIBS   = $(MSVCRT) \
		kernel32.lib user32.lib advapi32.lib 

EXTRA_LIBS    =	$(OLELIB) \
		$(JPG_LIB_SPEC) $(PNG_LIB_SPEC) $(TIFLIB) \
		gdi32.lib \
		oldnames.lib \
		advapi32.lib \
		winspool.lib \
		comdlg32.lib

BLT_TCL_LIBS = $(MSVCRT)  \
		kernel32.lib user32.lib advapi32.lib 

BLT_TK_LIBS =   $(OLELIB) \
		$(JPG_LIB_SPEC) $(PNG_LIB_SPEC) $(TIF_LIB_SPEC) \
		$(FT2_LIB_SPEC) \
		$(MSVCRT) \
		kernel32.lib user32.lib \
		gdi32.lib oldnames.lib advapi32.lib winspool.lib \
		comdlg32.lib 


# ------------------------------------------------------------------------
# 	Source and target installation directories 
# ------------------------------------------------------------------------

instdirs      =	$(prefix) $(exec_prefix) $(bindir) $(libdir) \
			$(includedir)
instdirs      =	$(exec_prefix) $(prefix) $(libdir)

# ------------------------------------------------------------------------
# 	Directories containing Tcl and Tk include files and libraries
# ------------------------------------------------------------------------

INCLUDES      =	-I. -I$(srcdir) -I$(srcdir)/win \
		-I'$(TOOLS32)/include' \
		-I$(TCLDIR)/include -I$(TKDIR)/include 

#-I$(TCLROOT)/include

SO_LD_LIBS =	$(COMMON_LIBS) $(EXTRA_LIBS)

# ------------------------------------------------------------------------
# 	You don't need to edit anything beyond this point
# ------------------------------------------------------------------------

blt_dt_csv_name =       BltDataTableCsv$(version)$(DBG)
blt_dt_mysql_name =     BltDataTableMysql$(version)$(DBG)
blt_dt_tree_name =      BltDataTableTree$(version)$(DBG)
blt_dt_vec_name =       BltDataTableVector$(version)$(DBG)
blt_dt_xml_name =       BltDataTableXml$(version)$(DBG)

blt_dt_xml_so =		$(blt_dt_xml_name).dll
blt_dt_mysql_so =       $(blt_dt_mysql_name).dll
blt_dt_tree_so =	$(blt_dt_tree_name).dll
blt_dt_vec_so =		$(blt_dt_vec_name).dll
blt_dt_csv_so =		$(blt_dt_csv_name).dll

blt_dt_xml_implib =	$(blt_dt_xml_name).lib
blt_dt_mysql_implib =   $(blt_dt_mysql_name).lib
blt_dt_tree_implib =	$(blt_dt_tree_name).lib
blt_dt_vec_implib =	$(blt_dt_vec_name).lib
blt_dt_csv_implib =	$(blt_dt_csv_name).lib

blt_pict_gif_name =     BltPictureGif$(version)$(DBG)
blt_pict_jpg_name =     BltPictureJpg$(version)$(DBG)
blt_pict_photo_name =   BltPicturePhoto$(version)$(DBG)
blt_pict_png_name =     BltPicturePng$(version)$(DBG)
blt_pict_tif_name =     BltPictureTif$(version)$(DBG)
blt_pict_xbm_name =     BltPictureXbm$(version)$(DBG)
blt_pict_xpm_name =     BltPictureXpm$(version)$(DBG)

blt_pict_gif_so =	$(blt_pict_gif_name).dll
blt_pict_jpg_so =	$(blt_pict_jpg_name).dll
blt_pict_png_so =	$(blt_pict_png_name).dll
blt_pict_tif_so =	$(blt_pict_tif_name).dll
blt_pict_xbm_so =	$(blt_pict_xbm_name).dll
blt_pict_xpm_so =	$(blt_pict_xpm_name).dll
blt_pict_photo_so =     $(blt_pict_photo_name).dll

blt_pict_gif_implib =	$(blt_pict_gif_name).lib
blt_pict_jpg_implib =	$(blt_pict_jpg_name).lib
blt_pict_png_implib =	$(blt_pict_png_name).lib
blt_pict_tif_implib =	$(blt_pict_tif_name).lib
blt_pict_xbm_implib =	$(blt_pict_xbm_name).lib
blt_pict_xpm_implib =	$(blt_pict_xpm_name).lib
blt_pict_photo_implib = $(blt_pict_photo_name).lib

blt_tree_xml_name =	BltTreeXml$(version)$(DBG)

blt_tree_xml_so =	$(blt_tree_xml_name).dll
blt_tree_xml_implib =	$(blt_tree_xml_name).lib

blt_tcl_pkgs_so =	$(blt_dt_csv_so) \
			$(blt_dt_tree_so) \
			$(blt_dt_vec_so) 
ifeq ($(WITH_EXPAT), 1)
   blt_tcl_pkgs_so += $(blt_dt_xml_so) $(blt_tree_xml_so)
endif
ifneq ($(WITH_MYSQL), 1)
   blt_tcl_pkgs_so += $(blt_dt_mysql_so) 
endif

blt_tk_pkgs_so =	$(blt_pict_gif_so) \
			$(blt_pict_xbm_so) \
			$(blt_pict_photo_so)
ifneq ($(WITH_JPG), 1)
   blt_tk_pkgs_so += $(blt_pict_jpg_so) 
endif
ifneq ("$(PNG_LIB_SPEC)", "")
   blt_tk_pkgs_so += $(blt_pict_png_so) 
endif
ifneq ("$(XPM_LIB_SPEC)", "")
   blt_tk_pkgs_so += $(blt_pict_xpm_so) 
endif
ifneq ("$(XPM_TIF_SPEC)", "")
   blt_tk_pkgs_so += $(blt_pict_tif_so) 
endif


N_OBJS =		bltTed.o
V3_OBJS =		bltTri.o bltGrMt.o 

TK_OBJS =		tkButton.o tkFrame.o bltScrollbar.o 

GRAPH_OBJS =		bltGrAxis.o \
			bltGrBar.o \
			bltGrElem.o \
			bltGrHairs.o \
			bltGrLegd.o \
			bltGrLine.o \
			bltGrMarker.o \
			bltGrMisc.o \
			bltGrPen.o \
			bltGrPs.o \
			bltGraph.o 

TREEVIEW_OBJS =		bltTreeView.o \
			bltTvCmd.o \
			bltTvCol.o \
			bltTvEdit.o \
			bltTvStyle.o 

PICTURE_OBJS =		bltPicture.o \
			bltPictCmd.o \
			bltPictDraw.o \
			bltPictMmx.o 

PICTURE_PKG_OBJS =	bltPictGif.o \
			bltPictJpg.o \
			bltPictPhoto.o \
			bltPictPng.o \
			bltPictTif.o \
			bltPictXbm.o \
			bltPictXpm.o 


TREE_OBJS =		bltTree.o \
			bltTreeCmd.o \

TREE_PKG_OBJS =		bltTreeXml.o 

DATATABLE_OBJS =	bltDataTable.o \
			bltDtCmd.o \

DATATABLE_PKG_OBJS =	bltDtCsv.o \
			bltDtMysql.o \
			bltDtTree.o \
			bltDtVec.o \
			bltDtXml.o 

BLT_TCL_SO_OBJS =	bltAlloc.o \
			bltArrayObj.o \
			bltBase64.o \
			bltBgexec.o \
			bltChain.o \
			bltCrc32.o \
			bltCsv.o \
			$(DATATABLE_OBJS) \
			bltDebug.o \
			bltHash.o \
			bltInit.o \
			bltList.o \
			bltNsUtil.o \
			bltParse.o \
			bltPool.o \
			bltDBuffer.o \
			bltSpline.o \
			bltSwitch.o \
			$(TREE_OBJS) \
			bltUtil.o \
			bltVar.o \
			bltVecCmd.o \
			bltVecMath.o \
			bltVector.o \
			bltWatch.o \
			bltWinDde.o \
			bltWinPipe.o \
			bltWinUtil.o \
			pure_api.o


BLT_TCL_A_OBJS =	$(BLT_TCL_SO_OBJS) \
			$(TREE_PKG_OBJS) \
			$(DATATABLE_PKG_OBJS) 

BLT_TK_SO_OBJS =	$(GRAPH_OBJS) \
			$(PICTURE_OBJS) \
			$(TREEVIEW_OBJS) \
			bltBeep.o \
			bltBgStyle.o \
			bltBind.o \
			bltBitmap.o \
			bltBusy.o \
			bltCanvEps.o \
			bltComboBtn.o \
			bltComboEntry.o \
			bltComboMenu.o \
			bltComboTree.o \
			bltConfig.o \
			bltContainer.o \
			bltCutbuffer.o \
			bltDragdrop.o \
			bltHtext.o \
			bltImage.o \
			bltOldConfig.o \
			bltPs.o \
			bltTable.o \
			bltTabnotebook.o \
			bltTabset.o \
			bltText.o \
			bltTile.o \
			bltWinBitmap.o \
			bltWinDraw.o \
			bltWinFont.o \
			bltWinPainter.o \
			bltWinPrnt.o \
			bltWinWindow.o \
			bltWindow.o \
			bltWinop.o  \
			$(TK_OBJS) $(N_OBJS) 


BLT_TK_A_OBJS =		$(BLT_TK_SO_OBJS) \
			$(PICTURE_PKG_OBJS) 

BLT_SO_OBJS =		$(BLT_TCL_SO_OBJS) \
			$(BLT_TK_SO_OBJS) 

BLT_A_OBJS =		$(BLT_TCL_A_OBJS) \
			$(BLT_TK_A_OBJS) 

DEMO_OBJS =		tkConsole.o bltWinMain.o

NOT_YET       =	bltContainer.o bltCutBuffer.o bltColor.o

# GNU Make-specific macro
SRCS =			$(patsubst %.o,$(srcdir)/%.c,$(OBJS)) 


HEADERS   =	blt.h bltChain.h bltVector.h bltTree.h bltPool.h 
GENERATED_HEADERS  = bltHash.h

# GNU Make-specific macro
SRCS          =	$(patsubst %.o,$(srcdir)/%.c,$(BLT_A_OBJS)) 

shell_name    = bltwish
version       =	$(BLT_MAJOR_VERSION)$(BLT_MINOR_VERSION)
bltwish =	bltwish.exe
bltsh =		bltsh.exe
bltwish2 =	bltwish$(version).exe
bltsh2 =	bltsh$(version).exe

blt_tcl_name =	BltTcl$(version)$(DBG)
blt_tk_name =	BltTk$(version)$(DBG)

blt_tcl_spec =	-L. -l$(blt_tcl_name)
blt_tk_spec =	-L. -l$(blt_tcl_name)

blt_tcl_so =	$(blt_tcl_name).dll
blt_tcl_a =	$(blt_tcl_name).a
blt_tcl_implib = $(blt_tcl_name).lib

blt_tk_so =	$(blt_tk_name).dll
blt_tk_a =	$(blt_tk_name).a
blt_tk_implib =	$(blt_tk_name).lib

CC_OPTS       = $(CFLAGS) $(EXTRA_CFLAGS) $(DEFINES) $(INCLUDES)
MAIN_CC_OPTS  = $(CC_OPTS) $(JPG_DEFINES) $(PNG_DEFINES) 

VPATH         =	$(srcdir)

all: bltHash.h build-library $(SO_TARGET) build-demos

install: all install-dirs install-headers install-binaries install-demos

build-demos: $(SO_TARGET) $(bltsh) $(bltwish) 

build-library: $(blt_tcl_so) $(blt_tcl_a) $(blt_tk_so) $(blt_tk_a) 

build-dll: build-library $(blt_tcl_so) $(blt_tk_so) 

build_tcl_pkgs: $(blt_tcl_pkgs_so) 
build_tk_pkgs:  $(blt_tk_pkgs_so)

$(bltwish): $(blt_tcl_so) $(blt_tk_so) tkConsole.o $(srcdir)/bltWinMain.c
	$(RM) $(bltwish) 
	$(CC) -c $(MAIN_CC_OPTS) -DSTATIC_PKGS -DTCLLIBPATH=\"$(TCLLIBPATH)\" \
		-FobltWinMain.o $(srcdir)/bltWinMain.c 
	$(LD) $(LDFLAGS) tkConsole.o bltWinMain.o -out:$(bltwish) \
		-subsystem:windows -entry:WinMainCRTStartup \
		$(blt_tk_a) $(blt_tcl_a) \
		$(TK_STUBS_SPEC) $(TK_LIB_SPEC) \
		$(TCL_STUBS_SPEC) $(TCL_LIB_SPEC) \
		$(BLT_TK_LIBS)
	if test -r "$(bltwish).manifest" ; then \
	    $(MT) -nologo -manifest $(bltwish).manifest \
		-outputresource:$(bltwish)\;1 ; \
	fi

$(bltsh): $(blt_tcl_so) $(srcdir)/bltWinMain.c
	$(RM) $(bltsh) 
	$(CC) -c $(MAIN_CC_OPTS) -DTCL_ONLY -DSTATIC_PKGS \
		-DTCLLIBPATH=\"$(TCLLIBPATH)\" \
		-FobltWinMain.o $(srcdir)/bltWinMain.c
	$(LD) $(LDFLAGS) bltWinMain.o -out:$(bltsh) \
		-subsystem:console -entry:mainCRTStartup \
		$(blt_tcl_a) \
		$(TCL_STUBS_SPEC) $(TCL_LIB_SPEC) \
		$(BLT_TCL_LIBS) 
	if test -r "$(bltsh).manifest" ; then \
	    $(MT) -nologo -manifest $(bltsh).manifest \
		-outputresource:$(bltsh)\;1 ; \
	fi

$(blt_tk_a):  $(BLT_TK_A_OBJS) bltTkInit.c
	$(RM) bltTkInit.o
	$(CC) -c $(CC_OPTS) -FobltTkInit.o $(srcdir)/bltTkInit.c 
	$(RM) $@
	$(AR) -out:$@ bltTkInit.o $(BLT_TK_A_OBJS)

$(blt_tk_so): $(blt_tcl_a) $(BLT_TK_SO_OBJS) bltTkInit.c
	$(RM) bltTkInit.o
	$(CC) -c $(CC_OPTS) -DUSE_DLL -FobltTkInit.o $(srcdir)/bltTkInit.c 
	$(RM) $@
	$(LD) $(BLT_TK_SO_LDFLAGS) -out:$@ bltTkInit.o $(BLT_TK_SO_OBJS) \
		$(blt_tcl_implib) $(tk_lib_spec) $(tcl_lib_spec) \
		$(BLT_TK_LIBS)
	if test -r "$(blt_tk_so).manifest" ; then \
	    $(MT) -nologo -manifest $(blt_tk_so).manifest \
		-outputresource:$(blt_tk_so)\;2 ; \
	fi


$(blt_tcl_a):  bltHash.h $(BLT_TCL_A_OBJS) bltTclInit.c
	$(RM) bltTclInit.o
	$(CC) -c $(CC_OPTS) -DBLT_LIBRARY=\"$(BLT_LIBRARY)\" \
		-FobltTclInit.o $(srcdir)/bltTclInit.c 
	$(RM) $@
	$(AR) -out:$@ bltTclInit.o $(BLT_TCL_A_OBJS) 

$(blt_tcl_so): $(blt_tcl_a) $(BLT_TCL_SO_OBJS)  bltTkInit.c
	$(RM) bltTclInit.o
	$(CC) -c $(CC_OPTS) -DBLT_LIBRARY=\"$(BLT_LIBRARY)\" -DUSE_DLL \
		-FobltTclInit.o $(srcdir)/bltTclInit.c 
	$(RM) $@
	$(LD) $(BLT_TCL_SO_LDFLAGS) -out:$@  bltTclInit.o $(BLT_TCL_SO_OBJS) \
		$(tcl_lib_spec) $(BLT_TCL_LIBS) $(LIBS) 
	if test -r "$(blt_tcl_so).manifest" ; then \
	    $(MT) -nologo -manifest $(blt_tcl_so).manifest \
		-outputresource:$(blt_tcl_so)\;2 ; \
	fi

$(blt_dt_mysql_so): bltDtMysql.o
	$(RM) $@
	$(LD) $(BLT_TCL_SO_LDFLAGS) -out:$@  bltDtMysql.o \
		$(blt_tcl_implib) $(tcl_lib_spec) $(BLT_TCL_LIBS) $(LIBS) 
	if test -r "$(blt_dt_mysql_so).manifest" ; then \
	    $(MT) -nologo -manifest $(blt_dt_mysql_so).manifest \
		-outputresource:$(blt_dt_mysql_so)\;2 ; \
	fi

$(blt_dt_xml_so): bltDtXml.o
	$(RM) $@
	$(SO_LD) $(SO_LD_FLAGS) -o $@ bltDtXml.o $(EXPAT_LIB_SPEC)
	$(RM) $@
	$(LD) $(BLT_TCL_SO_LDFLAGS) -out:$@  bltDtXml.o $(EXPAT_LIB_SPEC) \
		$(blt_tcl_implib) $(tcl_lib_spec) $(BLT_TCL_LIBS) $(LIBS) 
	if test -r "$(blt_dt_xml_so).manifest" ; then \
	    $(MT) -nologo -manifest $(blt_dt_xml_so).manifest \
		-outputresource:$(blt_dt_xml_so)\;2 ; \
	fi

$(blt_dt_csv_so): bltDtCsv.o
	$(RM) $@
	$(SO_LD) $(SO_LD_FLAGS) -o $@ bltDtCsv.o 
	$(RM) $@
	$(LD) $(BLT_TCL_SO_LDFLAGS) -out:$@  bltDtMysql.o \
		$(blt_tcl_implib) $(tcl_lib_spec) \
		$(BLT_TCL_LIBS) $(LIBS) 
	if test -r "$(blt_dt_mysql_so).manifest" ; then \
	    $(MT) -nologo -manifest $(blt_dt_mysql_so).manifest \
		-outputresource:$(blt_dt_mysql_so)\;2 ; \
	fi

$(blt_dt_vec_so): bltDtVec.o
	$(RM) $@
	$(SO_LD) $(SO_LD_FLAGS) -o $@ bltDtVec.o 
	$(RM) $@
	$(LD) $(BLT_TCL_SO_LDFLAGS) -out:$@  bltDtMysql.o \
		$(blt_tcl_implib) $(tcl_lib_spec) \
		$(BLT_TCL_LIBS) $(LIBS) 
	if test -r "$(blt_dt_mysql_so).manifest" ; then \
	    $(MT) -nologo -manifest $(blt_dt_mysql_so).manifest \
		-outputresource:$(blt_dt_mysql_so)\;2 ; \
	fi

$(blt_dt_tree_so): bltDtTree.o
	$(RM) $@
	$(SO_LD) $(SO_LD_FLAGS) -o $@ bltDtTree.o 
	$(RM) $@
	$(LD) $(BLT_TCL_SO_LDFLAGS) -out:$@  bltDtMysql.o \
		$(blt_tcl_implib) $(tcl_lib_spec) \
		$(BLT_TCL_LIBS) $(LIBS) 
	if test -r "$(blt_dt_mysql_so).manifest" ; then \
	    $(MT) -nologo -manifest $(blt_dt_mysql_so).manifest \
		-outputresource:$(blt_dt_mysql_so)\;2 ; \
	fi

$(blt_pict_gif_so): bltPictGif.o
	$(RM) $@
	$(SO_LD) $(SO_LD_FLAGS) -o $@ bltPictGif.o 
	$(RM) $@
	$(LD) $(BLT_TCL_SO_LDFLAGS) -out:$@  bltDtMysql.o \
		$(blt_tcl_implib) $(tcl_lib_spec) \
		$(BLT_TCL_LIBS) $(LIBS) 
	if test -r "$(blt_dt_mysql_so).manifest" ; then \
	    $(MT) -nologo -manifest $(blt_dt_mysql_so).manifest \
		-outputresource:$(blt_dt_mysql_so)\;2 ; \
	fi

$(blt_pict_jpg_so): bltPictJpg.o
	$(RM) $@
	$(LD) $(BLT_TK_SO_LDFLAGS) -out:$@  bltPictJpg.o $(JPG_LIB_SPEC) \
		$(blt_tcl_implib) $(tcl_lib_spec) $(LIBS) 
	if test -r "$(blt_pict_jpg_so).manifest" ; then \
	    $(MT) -nologo -manifest $(blt_pict_jpg_so).manifest \
		-outputresource:$(blt_pict_jpg_so)\;2 ; \
	fi

$(blt_pict_png_so): bltPictPng.o
	$(RM) $@
	$(SO_LD) $(SO_LD_FLAGS) -o $@ bltPictPng.o $(PNG_LIB_SPEC)
	$(RM) $@
	$(LD) $(BLT_TCL_SO_LDFLAGS) -out:$@  bltDtMysql.o \
		$(blt_tcl_implib) $(tcl_lib_spec) \
		$(BLT_TCL_LIBS) $(LIBS) 
	if test -r "$(blt_dt_mysql_so).manifest" ; then \
	    $(MT) -nologo -manifest $(blt_dt_mysql_so).manifest \
		-outputresource:$(blt_dt_mysql_so)\;2 ; \
	fi

$(blt_pict_tif_so): bltPictTif.o
	$(RM) $@
	$(SO_LD) $(SO_LD_FLAGS) -o $@ bltPictTif.o $(TIF_LIB_SPEC)
	$(RM) $@
	$(LD) $(BLT_TCL_SO_LDFLAGS) -out:$@  bltDtMysql.o \
		$(blt_tcl_implib) $(tcl_lib_spec) \
		$(BLT_TCL_LIBS) $(LIBS) 
	if test -r "$(blt_dt_mysql_so).manifest" ; then \
	    $(MT) -nologo -manifest $(blt_dt_mysql_so).manifest \
		-outputresource:$(blt_dt_mysql_so)\;2 ; \
	fi

$(blt_pict_xbm_so): bltPictXbm.o
	$(RM) $@
	$(SO_LD) $(SO_LD_FLAGS) -o $@ bltPictXbm.o 
	$(RM) $@
	$(LD) $(BLT_TCL_SO_LDFLAGS) -out:$@  bltDtMysql.o \
		$(blt_tcl_implib) $(tcl_lib_spec) \
		$(BLT_TCL_LIBS) $(LIBS) 
	if test -r "$(blt_dt_mysql_so).manifest" ; then \
	    $(MT) -nologo -manifest $(blt_dt_mysql_so).manifest \
		-outputresource:$(blt_dt_mysql_so)\;2 ; \
	fi

$(blt_pict_xpm_so): bltPictXpm.o
	$(RM) $@
	$(SO_LD) $(SO_LD_FLAGS) -o $@ bltPictXpm.o \
		$(X11_LIB_SPEC) $(XPM_LIB_SPEC)
	$(RM) $@
	$(LD) $(BLT_TK_SO_LDFLAGS) -out:$@  bltDtMysql.o \
		$(blt_tcl_implib) $(tcl_lib_spec) $(tk_lib_spec) \
		$(BLT_TCL_LIBS) $(LIBS) 
	if test -r "$(blt_dt_mysql_so).manifest" ; then \
	    $(MT) -nologo -manifest $(blt_dt_mysql_so).manifest \
		-outputresource:$(blt_dt_mysql_so)\;2 ; \
	fi

$(blt_pict_photo_so): bltPictPhoto.o
	$(RM) $@
	$(SO_LD) $(SO_LD_FLAGS) -o $@ bltPictPhoto.o 
	$(RM) $@
	$(LD) $(BLT_TK_SO_LDFLAGS) -out:$@  bltPictPhoto.o \
		$(blt_tk_implib) $(blt_tcl_implib) \
		$(tk_lib_spec) $(tcl_lib_spec) \
		$(BLT_TK_LIBS) $(LIBS) 
	if test -r "$(blt_pict_photo_so).manifest" ; then \
	    $(MT) -nologo -manifest $(blt_pict_photo_so).manifest \
		-outputresource:$(blt_pict_photo_so)\;2 ; \
	fi

$(blt_tree_xml_so): bltTreeXml.o
	$(RM) $@
	$(LD) $(BLT_TCL_SO_LDFLAGS) -out:$@  bltTreeXml.o $(EXPAT_LIB_SPEC) \
		$(blt_tcl_implib) $(tcl_lib_spec) \
		$(BLT_TCL_LIBS) $(LIBS) 
	if test -r "$(blt_tree_xml_so).manifest" ; then \
	    $(MT) -nologo -manifest $(blt_tree_xml_so).manifest \
		-outputresource:$(blt_tree_xml_so)\;2 ; \
	fi

bltWinMain.o: $(srcdir)/bltWinMain.c 
	$(CC) -c $(CC_OPTS) -DTCLLIBPATH=\"$(TCLLIBPATH)\" \
		-FobltWinMain.o $(srcdir)/bltWinMain.c 

bltPictureDraw.o: $(srcdir)/bltPictureDraw.c
	$(CC) -c $(CC_OPTS) $(FREETYPE2_INC_SPEC)  \
		-FobltPictureDraw.o $(srcdir)/bltPictureDraw.c 

bltDtMysql.o: $(srcdir)/bltDtMysql.c
	$(CC) -c $(CC_OPTS) $(MYSQL_DEFINES) $(MYSQL_INC_SPEC)  \
		-FobltDtMysql.o $(srcdir)/bltDtMysql.c 

bltDtXml.o: $(srcdir)/bltDtXml.c
	$(CC) -c $(CC_OPTS) $(EXPAT_DEFINES) $(EXPAT_INC_SPEC)  \
		-FobltDtXml.o $(srcdir)/bltDtXml.c 

bltTreeXml.o: $(srcdir)/bltTreeXml.c
	$(CC) -c $(CC_OPTS) $(EXPAT_DEFINES) $(EXPAT_INC_SPEC)  \
		-FobltTreeXml.o $(srcdir)/bltTreeXml.c 

bltPictJpg.o: $(srcdir)/bltPictJpg.c
	$(CC) -c $(CC_OPTS) $(JPG_DEFINES) $(JPG_INC_SPEC)  \
		-FobltPictJpg.o $(srcdir)/bltPictJpg.c 

bltPictPng.o: $(srcdir)/bltPictPng.c
	$(CC) -c $(CC_OPTS) $(PNG_DEFINES) $(PNG_INC_SPEC)  \
		-FobltPictPng.o $(srcdir)/bltPictPng.c 

bltPictureFormats.o: $(srcdir)/bltPictureFormats.c
	$(CC) -c $(CC_OPTS) $(PICTURE_DEFINES) \
		$(FREETYPE2_INC_SPEC) $(PICTURE_INCLUDES) \
		-FobltPictureFormats.o $(srcdir)/bltPictureFormats.c 

bltPictureImage.o: $(srcdir)/bltPictureImage.c
	$(CC) -c $(CC_OPTS) $(PICTURE_DEFINES) \
		-FobltPictureImage.o $(srcdir)/bltPictureImage.c 

bltHash.h: $(srcdir)/bltHash.h.in
	sed -e 's/@SIZEOF_VOID_P@/4/' \
	    -e 's/@SIZEOF_INT@/4/' \
	    -e 's/@SIZEOF_LONG@/4/' \
	    -e 's/@SIZEOF_LONG_LONG@/8/' \
	    -e 's/@HAVE_INTTYPES_H@/0/' \
	    $(srcdir)/bltHash.h.in > bltHash.h

bltHash.c: bltHash.h

install-dirs:
	@for i in $(instdirs) ; do \
	    if test ! -d "$$i" ; then \
		echo " mkdir $$i" ; \
		mkdir "$$i" ; \
	    fi ; \
        done

install-binaries: install-lib install-demos 

install-demos: build-demos
	$(INSTALL) $(bltwish) $(bindir)/$(bltwish)
	$(INSTALL) $(bltwish) $(bindir)/$(bltwish2)
	$(INSTALL) $(bltsh) $(bindir)/$(bltsh)
	$(INSTALL) $(bltsh) $(bindir)/$(bltsh2)

install-lib: $(blt_tcl_so) $(blt_tk_so) $(blt_tcl_a) $(blt_tk_a)
	$(INSTALL) $(blt_tcl_so) $(bindir)
	$(INSTALL) $(blt_tk_so) $(bindir)
	$(INSTALL_DATA) $(blt_tcl_a) $(libdir)
	$(INSTALL_DATA) $(blt_tk_a) $(libdir)

install-headers: bltHash.h
	for i in $(HEADERS) ; do \
	    $(INSTALL_DATA) "$(srcdir)/$$i" $(includedir) ; \
	done
	$(INSTALL_DATA) bltHash.h $(includedir) 

lint:
	$(LINT) $(LINTFLAGS) $(DEFINES) $(INCLUDES) $(SRCS)

clean:
	$(RM) *.o *.pdb *.exp *.manifest *.lib \
		$(blt_tcl_a) $(blt_tcl_so) \
		$(blt_tk_a) $(blt_tk_so) \
		$(bltwish) $(bltsh) $(bltwish2) $(bltsh2)
	$(RM) $(srcdir)/*.bak $(srcdir)/*\~ $(srcdir)/"#"*  

distclean: clean
	$(RM) Makefile

bltTclInit.o: bltTclInit.c
	$(CC) -c $(CC_OPTS) -DBLT_LIBRARY=\"$(BLT_LIBRARY)\" \
		-FobltTclInit.o $(srcdir)/bltTclInit.c

bltPictCmd.o: $(srcdir)/bltPictCmd.c
	$(CC) -c $(CC_OPTS) $(LIB_DEFINES) -Fo$@ $(srcdir)/bltPictCmd.c

bltDtCmd.o: $(srcdir)/bltDtCmd.c
	$(CC) -c $(CC_OPTS) $(LIB_DEFINES) -Fo$@ $(srcdir)/bltDtCmd.c

bltTreeCmd.o: $(srcdir)/bltTreeCmd.c
	$(CC) -c $(CC_OPTS) $(LIB_DEFINES) -Fo$@ $(srcdir)/bltTreeCmd.c

bltPictDraw.o: $(srcdir)/bltPictDraw.c
	$(CC) -c $(CC_OPTS) $(FT2_DEFINES) -Fo$@ $(srcdir)/bltPictDraw.c

.c.o:
	$(CC) -c $(CC_OPTS) -Fo$@ $<

